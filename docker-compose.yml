services:

  db:
    image: postgres:17.1-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      interval: 3s
      timeout: 3s
      retries: 10

  redis:
    image: redis:8-alpine
    ports:
      - "${REDIS_PORT}:6379"
    healthcheck:
      test: redis-cli ping
      interval: 3s
      timeout: 3s
      retries: 10

  backend:
    build: .
    env_file: .env
    environment:
      DB_HOST: db
      DB_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: sh -c "python manage.py migrate &&  python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"

  celery-worker:
    build: .
    env_file: .env
    environment:
      DB_HOST: db
      DB_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A config worker -l INFO

volumes:
  pg_data: